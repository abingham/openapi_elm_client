module Test exposing (..)

import Http
import Json.Decode
import Json.Encode
import Json.Decode.Pipeline
import Maybe.Extra
import Url.Builder

-- Typedefs

type alias Widget = 
    { parts: List String
    }

-- Remote calls

-- GET endpoints


getWidgetsRequest :  String ->  (Result Http.Error (List Widget) -> msg) -> Cmd msg
getWidgetsRequest baseUrl  toMsg =
    let
        queryParams = [
            ] |> Maybe.Extra.values

        decoder =
            ((Json.Decode.succeed Widget |> Json.Decode.Pipeline.required "parts" (Json.Decode.string |> Json.Decode.list)) |> Json.Decode.list)
    in
    Http.get
      { url = Url.Builder.relative [baseUrl, "api", "v1", "camera", ""] queryParams 
      , expect = Http.expectJson toMsg decoder 
      }

-- POST endpoints


